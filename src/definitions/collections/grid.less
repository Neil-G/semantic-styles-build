/*!
 * # Semantic UI - Grid
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

/*******************************
            Theme
*******************************/

@type    : 'collection';
@element : 'grid';

@import (multiple) '../../theme.config';



// function to generate width attribute
.generate-col-width(@cols-wide) {
  width: (@cols-wide/@columnCount)*100%;
}


// Generate Generic Columns
.generate-columns(@n: 1) when (@n =< @columnCount) {
  .col-@{n} { .generate-col-width(@n); }
  .generate-columns((@n + 1));
}

// Generate specialized column values
.generate-columns(@n) when (@n = @columnCount) {
  .col-full { .generate-col-width(@n); }
  .col-none { display: none; }
}

// Generate Responsive Columns
.generate-responsive-columns(@n, @breakpointSuffix) when (@n =< @columnCount) {
  .col-@{breakpointSuffix}-@{n} { .generate-col-width(@n); }
  .generate-responsive-columns((@n + 1), @breakpointSuffix);
}

.generate-responsive-columns(@n, @breakpointSuffix) when (@n = @columnCount) {
  .col-@{breakpointSuffix}-full { .generate-col-width(@n); }
  .col-@{breakpointSuffix}-none { display: none; }
}


// Generate Generic Columns
.generate-columns();

// Generate Responsive Columns
@media screen and (max-width: @mobileBreakpoint) {
  .generate-responsive-columns(1, @mobileBreakpointColSuffix)
}

@media screen and (max-width: @tabletBreakpoint) {
  .generate-responsive-columns(1, @tabletBreakpointColSuffix)
}

@media screen and (max-width: @computerBreakpoint) {
  .generate-responsive-columns(1, @computerBreakpointColSuffix)
}

@media screen and (max-width: @largeMonitorBreakpoint) {
  .generate-responsive-columns(1, @largeMonitorBreakpointColSuffix)
}

@media screen and (max-width: @widescreenMonitorBreakpoint) {
  .generate-responsive-columns(1, @widescreenMonitorBreakpointColSuffix)
}

.loadUIOverrides();
